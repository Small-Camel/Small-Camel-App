<template>
  <view class="container">
    <view class="pos">
      <view class="search_read_only">
        <navigator class="search_content" open-type="navigate" url="/pages/search">
          <i class="iconfont icon-search"></i>
          <view class="search_input">搜索商品</view>
        </navigator>
      </view>
    </view>
    <swiper class="swiper" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" interval="{{interval}}" duration="{{duration}}" circular="true">
      <block wx:for="{{adList}}" wx:key="key">
        <swiper-item>
          <image src="{{item.picUrl}}" class="slide-image" @tap="goToAdvert({{item.advertUrl}})" />
        </swiper-item>
      </block>
    </swiper>
    <view class="recommend-title">商品推荐</view>
    <view class="shop_list">
      <!--矩阵商品列表模块-->
      <shopGridList :purchasetype.sync="purchasetype" :list.sync="list"></shopGridList>
      <!--加载更多时动画-->
      <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
      <!--暂无数据显示-->
      <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
    </view>
    <!--暂无数据显示-->
    <!-- <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder> -->
  </view>
</template>

<script>
  import wepy from "wepy";
  import apiList from "../api/apiList"
  import api from "../api/api";
  import tip from "../utils/tip";
  import ShopGridList from '../components/shop_grid_list'
  import BottomLoadMore from "../components/common/bottomLoadMore";
  import Placeholder from "../components/common/placeholder";
  export default class Home extends wepy.page {
    config = {
      navigationBarTitleText: "小骆驼杂货铺",
      enablePullDownRefresh:true
    };
    components = {
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder,
      shopGridList: ShopGridList
    };
    data = {
      //swiper
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 1500,
      list: [],
      purchasetype: 1,
      indicatorActiveColor: "#fff",
      //是否有数据
      is_empty: false,
      //当前页面
      currentPage: 0,
      //总页数
      totalPages: 0,
      //是否显示 底部loading
      showLoading: true,
      //防止重复加载
      preventRepeatRequest: false,
      //广告列表
      adList: [],
      tps: 0,
      is_show_alert: true
    };
    async getAdList() {
      const json = await api.getAdList({
        query: {}
      });
      if (json.data.code == 0) {
        this.adList = json.data.list;
        this.$apply();
      } else {}
    }
    //获得商品列表
    async getGoodList(currentPage, size) {
      let that = this;
      //const json = await api.getGoodsList({
      const json = await apiList.getCommodityList({
        page: currentPage || 0,
        size: size || 10,
        first_rate: true
        // cateCode: this.catCode,
        // sort: this.sort,
        // skuval: this.skuval
      });
      console.log(json.data);
      that.list = [...that.list, ...json.content];
      console.log(json.content);
      that.totalPages = json.totalPages;
      that.currentPage=that.currentPage++;
      if (json.totalElements == 0) {
        //暂无数据
        that.is_empty = true;
      }
      that.showLoading = false;
      that.$apply();
    }
    onLoad() {
      let that = this;
      this.getAdList();
      this.getGoodList();
    }
    async onPullDownRefresh(){
      let that=this;
      that.list=[];
      that.currentPage=0;
      await that.getGoodList(0);
      that.$apply();
      wepy.stopPullDownRefresh();
    }
    computed = {};
    methods = {
      goToAdvert(url) {
        console.log("url===" + url);
        if (url.length == 0) {
          return;
        }
        wepy.navigateTo({
          url: url
        });
      },
      onShareAppMessage: function(res) {
        if (res.from === "button") {
          // 来自页面内转发按钮
          console.log(res.target);
        }
        return {
          title: "小骆驼",
          path: "/pages/home",
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        };
      },
      alertCallback() {
        tip.alert("跳转");
      },
      closeAlert() {
        tip.alert("关闭");
      }
    };
    events = {};
    //加载更多优惠商品
    onReachBottom() {
      let that = this;
      this.showLoading = true;
      console.log(that.totalPages + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if (that.totalPages > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatRequest) {
          return true;
        }
        that.preventRepeatRequest = true;
        that.currentPage++;
        
        that.getGoodList(that.currentPage);
        that.preventRepeatRequest = false;
      } else {
        that.showLoading = false;
      }
      that.$apply();
    }
  }
</script>

<style lang="less">
  .swiper {
    height: 348rpx;
  }
  .slide-image {
    width: 100%;
    height: 100%;
  }
  .pos {
    // position: fixed;
    background: white;
    padding: 20rpx 0;
    width: 100%;
    .search_read_only .search_content {
      width: 100%;
    }
  }
  .nav_list {
    color: #404040;
    display: flex;
    font-size: 26rpx;
    justify-content: space-between;
    padding: 17rpx 50rpx;
    navigator {
      text-align: center;
    }
    .nav_icon {
      height: 80rpx;
      margin: 0 auto;
      width: 80rpx;
      margin-bottom: 14rpx;
    }
    .nav_text {
      font-size: 26rpx;
    }
  }
  .recommend-title {
    padding: 40rpx 0;
    text-align: center;
    color: #333;
  }
  .container {
    background: transparent;
  }
</style>
