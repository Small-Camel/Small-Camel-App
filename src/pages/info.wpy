<template>
  <view class="info">
    <button class="header" open-type="getUserInfo" bindgetuserinfo="getuserinfoEvent">
                              <view class="header_content">
                                <view wx:if="{{isLogin}}">
                                  <image class="avatarUrl" src="{{avatarUrl}}"></image>
                                  <view class="nickName cfff">{{nickName}}</view>
                                </view>
                                <view wx:else>
                                  <view class="avatarUrl"></view>
                                  <view class="nickName cfff">点我登陆</view>
                                </view>
                              </view>
                            </button>
    <view wx:if="{{loading}}">
      <bottomLoadMore :show.sync="loading" message="正在加载"></bottomLoadMore>
    </view>
    <view wx:else>
      <button class="regist_button" @tap="registEvent()" wx:if="{{isLogin&&!isUser}}">点我申请店铺~</button>
      <view wx:if="{{isUser}}">
        <view class="info_block">
          <navigator class="item" url="/pages/store_page?storeid={{openid}}&isOwner={{isOwner}}">
            <view class="item_content">
              <image class="item_img" src="../images/info-squares.svg"></image>
              <view class="text">我的商铺</view>
            </view>
            <view class="arrow">&gt;</view>
          </navigator>
          <navigator class="item" url="/pages/upload">
            <view class="item_content">
              <image class="item_img" src="../images/info-upload.svg"></image>
              <view class="text">上传商品</view>
            </view>
            <view class="arrow">&gt;</view>
          </navigator>
          <navigator class="item" url="/pages/register?store_name={{registedUserDetail.store_name}}&contact={{registedUserDetail.contact}}&introduction={{registedUserDetail.introduction}}&name={{registedUserDetail.name}}&grade={{registedUserDetail.grade}}&graduation={{registedUserDetail.graduation}}&major={{registedUserDetail.major}}">
            <view class="item_content">
              <image class="item_img" src="../images/info-settings.svg"></image>
              <view class="text">商铺设置</view>
            </view>
            <view class="arrow">&gt;</view>
          </navigator>
        </view>
        <navigator class="about" url="/pages/about">
          <view class="text">关于我们</view>
        </navigator>
      </view>
      <!-- <navigator class="item" url="/pages/license">
                                <view class="item_content">
                                  <image class="item_img" src="../images/icon_my_05.png"></image>
                                  <view class="text">软件协议</view>
                                </view>
                                <view class="arrow">&gt;</view>
                              </navigator> -->
    </view>
  </view>
  </view>
</template>
<script>
  import wepy from "wepy";
  import apiList from "../api/apiList";
  import tip from "../utils/tip";
  import BottomLoadMore from "../components/common/bottomLoadMore";
  import {
    USER_INFO,
    USER_SPECICAL_INFO
  } from "../utils/constant";
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: "我的"
    };
    components = {
      bottomLoadMore: BottomLoadMore,
    };
    data = {
      avatarUrl: "",
      nickName: "",
      bShowBind: false,
      isLogin: false,
      isUser: false,
      openid: "",
      isOwner: true,
      registedUserDetail: null,
      loading: true,
    };
    async onLoad() {}
    async onShow() {
      // this.onShow();
      let that = this;
      await that.setLoginState();
      that.openid = await wepy.getStorageSync('openid');
      that.$apply();
      console.log(this.openid);
    }
    async setLoginState() {
      this.loading = true;
      let that = this;
      let userInfo = wepy.getStorageSync(USER_INFO);
      console.log(userInfo);
      if (userInfo) {
        that.avatarUrl = userInfo.avatarUrl;
        that.nickName = userInfo.nickName;
        that.openid = userInfo.openid;
        that.isLogin = true;
        const registedUserDetail = await apiList.getUserDetail();
        //用户尚未注册商户
        console.log("registedUserDetail in info", registedUserDetail);
        if (registedUserDetail.statusCode >= 400) {
          console.log("普通用户");
          that.isUser = false;
        } else {
          that.isUser = true;
          that.registedUserDetail = registedUserDetail.data;
        }
      }
      that.loading = false;
      that.$apply();
    }
    askForUserDetail() {
      const recordUserDetail = async(code, rawData, signature, userInfo) => {
        let that = this;
        console.log("登陆");
        const openid = await apiList.login(code, userInfo);
        that.openid = openid;
        await wepy.setStorageSync(USER_INFO, userInfo);
        await wepy.setStorageSync('openid', openid);
        await wepy.setStorageSync('rawData', rawData);
        await wepy.setStorageSync('signature', signature);
        that.setLoginState();
        that.$apply();
      };
      wx.login({
        success: async function(res) {
          var code = res.code;
          wx.getUserInfo({
            success: function(res) {
              // 当用户授权成功的时候，保存用户的登录信息
              console.log("userinfo",res)
              wepy.setStorageSync(USER_INFO, res.userInfo);
              recordUserDetail(code, res.rawData, res.signature, res.userInfo);
            },
          });
        }
      });
    }
    computed = {};
    methods = {
      loginEvent() {
        this.askForUserDetail();
      },
      getuserinfoEvent: function(res) {
        const recordUserDetail = async(code, rawData, signature, userInfo) => {
          let that = this;
          console.log("登陆");
          const openid = await apiList.login(code, userInfo);
          that.openid = openid;
          await wepy.setStorageSync(USER_INFO, userInfo);
          await wepy.setStorageSync('openid', openid);
          await wepy.setStorageSync('rawData', rawData);
          await wepy.setStorageSync('signature', signature);
          that.setLoginState();
          that.$apply();
        };
        console.log(res)
        if (!this.isLogin) {
          const userInfo = res.detail.userInfo;
          wx.login({
            success: async function(loginres) {
              var code = loginres.code;
              recordUserDetail(code, res.detail.rawData, res.detail.signature, userInfo);
            }
          });
        }
      },
      async registEvent() {
        this.askForUserDetail();
        if (this.isLogin) {
          wx.navigateTo({
            url: `register`
          })
        }
      }
    };
    events = {};
  }
</script>
<style lang="less">
  .about {
    border-radius: 20rpx;
    background: #CEE8FA;
    text-align: center;
    width: 300rpx;
    padding: 20rpx;
    margin: 100rpx auto 40rpx;
    border: 1px solid #3A5D84;
    box-shadow: 0 3px 20px rgba(105, 88, 255, 0.137);
    .text {
      color: #3A5D84;
    }
  }
  .header {
    background: #6958ff;
    width: 690rpx;
    margin: 30rpx;
    border-radius: 20rpx;
    box-shadow: 0 10px 50px rgba(105, 88, 255, 0.486);
  }
  .header_content {
    width: 100%;
    margin: 0 auto;
    text-align: center;
    padding-top: 40rpx;
  }
  .avatarUrl {
    width: 122rpx;
    height: 122rpx;
    margin: 0 auto;
    border-radius: 1000px;
    background: white;
  }
  .nickName {
    font-size: 30rpx;
    padding-bottom: 40rpx;
    line-height: 40rpx;
  }
  .regist_button {
    border-radius: 20rpx;
    background: #CEE8FA;
    text-align: center;
    width: 690rpx;
    margin: 100rpx auto 0;
    border: 1px solid #3A5D84;
    box-shadow: 0 3px 20px rgba(105, 88, 255, 0.137);
    color: #3A5D84;
  }
  .info_block {
    margin-top: 100rpx;
    .item {
      border-top: 1rpx solid #dbdbdb;
      background: #fff;
      padding: 34rpx 28rpx;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    .item:last-child {
      border-bottom: 1rpx solid #dbdbdb;
    }
    .item_content {
      display: flex;
      align-items: center;
      margin-left: 25rpx;
      .text {
        margin-left: 25rpx;
        line-height: 35rpx;
        color: #1a1a1a;
      }
    }
    .item_img {
      width: 42rpx;
      height: 42rpx;
    }
    .arrow {
      color: #cccccc;
      font-size: 32rpx;
    }
    .tip {
      color: #999;
      font-size: 24rpx;
      margin-top: 20rpx;
      margin-left: 60rpx;
    }
  }
</style>
